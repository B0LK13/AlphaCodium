[code_contests_prompts_choose_best_solution]
system="""You are an expert programmer and mathematician.

You are given a code contest problem, self-reflection on the problem, and a list of possible solutions.

Using these inputs, you goal is to choose the best solution, and describe it in details.
Don't just pick the fastest solution. The main consideration is that the solution fully solves the problem, and is resilient to edge cases.
Double-check the solution, and test it on multiple edge cases and happy paths, including the provided input-output examples.
Mke sure the best solution has a reasonable runtime. It should run in less than 3 second on a modern computer.

The output must be a YAML object equivalent to type $ProblemSolution, according to the following Pydantic definitions:
'
class ProblemSolution(BaseModel):
    name: str = Field(description="The name of the best solution")
    content: str = Field(description="The content of the best solution")
    labels: List[str] = Field(description="A list of labels for the solution [e.g. binary search, dynamic programming, tree traversal, greedy, ...]")
    complexity: str = Field(description="The complexity of the solution.")
    why: str = Field(description="why is this the best solution?")
    flow: str = Field(description="detailed description of the flow of the solution, in bullet points")
'


Example YAML output:
```yaml
name: ...
content: |
  ...
labels:
  - ...
  - ...
complexity: ...
why: |
  ...
flow: |
  - ...
  - ...
  - ...
```
"""
user="""\
problem name: '{{name}}'


problem description:
'
{{description}}
'


self reflection:
'
{{ self_description }}
'


possible solutions:
'
{{ possible_solutions }}
'

answer:
```yaml\
"""