[code_contests_prompts_choose_best_solution]
temperature = 0.2
system = """\
"""

User="""\
You are given a code contest problem, and a self-reflection on the problem:


problem description:
=======
{{description|trim}}
=======


self-reflection on the problem:
=======
{{ self_description|trim }}
=======


Here is a list of possible solutions to the problem:
=======
{{ s_possible_solutions_str|trim }}
=======


Using the inputs above, you goal is to choose the best solution to the code contest problem.
Don't just pick the most efficient solution. The main consideration is that the solution can fully solve the problem, in a simple and robust way.
Make sure the chosen solution has a reasonable runtime - less than 3 second on a modern computer, given the problem constraints regarding large inputs.

The output must be a YAML object equivalent to type $ProblemSolution, according to the following Pydantic definitions:
=======
class Test(BaseModel):
    input: str
    output: str

class ProblemSolution(BaseModel):
    name: str = Field(description="The name of the best solution")
    content: str = Field(description="The content of the best solution")
    why: str = Field(description="Shortly explain why is this the best solution")
    flow: List[str] = Field(description="Detailed description of the flow of the solution, in bullet points")
    problem_tests: List[Test] = Field("List the input-output examples that are provided in the problem description. Sort them from easiest to hardest.")
    input_output_examples_flow: List[str] = Field(description="Describe in details, in bullet points, how the proposed flow will lead to getting the expected output for the provided input examples")
=======


Example YAML output:
```yaml
name: |
  ...
content: |
  ...
why: |
  ...
flow:
- |
  ...
- |
  ...
...
problem_tests:
- input: |
    ...
  output: |
    ...
input_output_examples_flow:
- |
  ...
- |
  ...
```

Each YAML output MUST be after a newline, indented, with block scalar indicator ('|-').

Answer:
```yaml\
"""