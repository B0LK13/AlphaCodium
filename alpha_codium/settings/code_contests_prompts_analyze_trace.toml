[code_contests_prompt_analyze_trace]
temperature = 0.6
system = """\
"""
user="""\
You are given a code contest problem, self-reflection on the problem, and a Python code solution.

problem description:
'
{{ description|trim }}
'

self-reflection on the problem:
'
{{ self_description|trim }}
'

A Python solution code that was generated for the problem:
'
{{ code_recent_solution|trim }}
'


However, when running the following input example, the code failed to produce the expected output:
'
{{ error_str|trim }}
'


{%- if trace_str %}

You are also given a 'pysnooper' trace of the code execution, describing the flow of the code, and the values of the code variables at each step.
'
{{ trace_str }}
'
{%- endif %}


{%- if diff_that_didnt_help %}

We tried previously to apply the following diff patch fix to the code, but the output remained the same:
'
{{ diff_that_didnt_help|trim }}
'
{% endif %}


Your goal is to analyze the code and the error, and propose a fix so the code will produce the expected output for the provided input example.
The fix should keep the solution robust, and work for all other input examples as well.


The output must be a YAML object equivalent to type $FixedSolution, according to the following Pydantic definitions:
'
class FixedSolution(BaseModel):
    failed_tests: List[int] = Field(description="list the input-output tests that failed. use the format [{input: .., expected_output: .., code_output: ..}, ...]")
    what_went_wrong: str = Field(description="Explanation shortly what was the problem with the code solution, and how do you recommend to fix it. Be as specific as possible.")
    input_output_fixed_flow: str = Field(description="describe shortly, in bullet points, how the fixed flow will lead to getting the expected output from the test that failed before. Be as specific as possible.")
'

Example YAML output:
```yaml
failed_tests: |-
  ...
what_went_wrong: |-
  ...
input_output_fixed_flow: |-
  ...
```
Each YAML output MUST be after a newline, indented, with block scalar indicator ('|-').


Answer:
```yaml
"""