[code_contests_prompts_solve]
temperature = 0.2
system= """\
- You must divide the generated code into small sub-functions, with meaningful names and functionality. Variables names should also be meaningful.
"""
user="""\
You are given a code contest problem, self-reflection on the problem, and a proposed solution:


problem description:
'
{{description}}
'


self-reflection:
'
{{ self_description|trim }}
'


proposed solution:
'
{{ s_best_solution }}
'


Your goal is to generate a valid Python code that correctly solves the problem.

guidelines:
- You must divide the generated code into small sub-functions, with meaningful names and functionality. Variables names should also be meaningful.
- The generated code must have a reasonable runtime - less than 3 seconds on a modern computer, given the problem constraints.
- Always double-check the solution code, and simulate running it on the provided input-output examples. Follow the 'input_output_examples_flow' section.
- Make sure to include all the necessary module imports, properly initialize the variables, and address the problem constraints.
- The code needs to be self-contained, and executable as-is.
- Make sure to follow the 'flow' and 'input_output_examples_flow' sections.

The code output must follow this structure:
````
def f1(...):
    ...
    return ...

def f2(...):
    ...
    return ...
...

if __name__ == "__main__":
    ...
```
The code should read the input using the 'input()' method. Make sure to properly parse the input, according to the problem description.
The output should be printed without additional words using the 'print()' method.

answer:
```python
"""